
 * More testing
 * Write test scripts

 * Complete LWP5 compatibility
 * Finish the authentication hooks (digest)
 * LWP::Conn::HTTP improvements
     - bundling of multiple request in a single syswrite() when
       pipelining.
     - minimize headers for second and following requests
     - look for Connection: close in request.  If so,
       make it the last one on this connection.
     - look for Connection: close in responses.  If one is seen,
       pushback all pipelined requests and make sure no new are
       set up.  Need a method to stop new requests on _this_
       connection.
     - retry request if used connection closes (only for request# > 1)
     - know about idempotent methods
     - always pass response data through sinks?
     - support HTTP/1.0 Keep-Alive? (more meaningful for a server)
     - non-blocking gethostbyname
     - try to record HTTP version number supported by the server
       in the LWP::Server object.
 * Make a single request able to override persistent connection
   behaviour (make a request always processed on its own connection)
 * LWP::Conn::FILE could support PUT and Content-Ranges
 * Other LWP::Conn implementations: FTP, NNTP, Gopher, MAILTO
 * Support HTTPS, TLS
 * gzip/compress sinks
 * deflate parameters
 * Tuning
 * Documentation

 * Delayed spooling (for robots)
 * RobotUA
 * Caching support
 * Some applications
 * one_event(timeout)

 * Move to same eventloop as Tk uses.  There appears to be a problem because
   the Tk fileevent does not allow a socket to be both readable and writable
   at the same time.  And Grahams Event.pm does not work with current IO
   modules.
   
